// Generated by @wagmi/cli@0.1.14 on 2023/3/30 at 下午7:40:19
import {
  useContract,
  UseContractConfig,
  useContractRead,
  UseContractReadConfig,
  useContractWrite,
  Address,
  UseContractWriteConfig,
  usePrepareContractWrite,
  UsePrepareContractWriteConfig,
  useContractEvent,
  UseContractEventConfig,
} from 'wagmi'
import {
  ReadContractResult,
  WriteContractMode,
  PrepareWriteContractResult,
} from 'wagmi/actions'

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Vault
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export const vaultABI = [
  {
    stateMutability: 'nonpayable',
    type: 'constructor',
    inputs: [{ name: 'addr', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: '', internalType: 'address', type: 'address' }],
    name: 'balances',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'deposit',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
      { name: 'deadline', internalType: 'uint256', type: 'uint256' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'permitDeposit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'tokenAddress',
    outputs: [{ name: '', internalType: 'address', type: 'address' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [{ name: 'amount', internalType: 'uint256', type: 'uint256' }],
    name: 'withdraw',
    outputs: [],
  },
] as const

/**
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export const vaultAddress = {
  80001: '0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18',
} as const

/**
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export const vaultConfig = { address: vaultAddress, abi: vaultABI } as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Dawant Coin
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export const dawantCoinABI = [
  { stateMutability: 'nonpayable', type: 'constructor', inputs: [] },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      {
        name: 'owner',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'spender',
        internalType: 'address',
        type: 'address',
        indexed: true,
      },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    anonymous: false,
    inputs: [
      { name: 'from', internalType: 'address', type: 'address', indexed: true },
      { name: 'to', internalType: 'address', type: 'address', indexed: true },
      {
        name: 'value',
        internalType: 'uint256',
        type: 'uint256',
        indexed: false,
      },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'DOMAIN_SEPARATOR',
    outputs: [{ name: '', internalType: 'bytes32', type: 'bytes32' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', internalType: 'address', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ name: '', internalType: 'uint8', type: 'uint8' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'subtractedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'addedValue', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'owner', internalType: 'address', type: 'address' }],
    name: 'nonces',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'owner', internalType: 'address', type: 'address' },
      { name: 'spender', internalType: 'address', type: 'address' },
      { name: 'value', internalType: 'uint256', type: 'uint256' },
      { name: 'deadline', internalType: 'uint256', type: 'uint256' },
      { name: 'v', internalType: 'uint8', type: 'uint8' },
      { name: 'r', internalType: 'bytes32', type: 'bytes32' },
      { name: 's', internalType: 'bytes32', type: 'bytes32' },
    ],
    name: 'permit',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ name: '', internalType: 'string', type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ name: '', internalType: 'uint256', type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', internalType: 'address', type: 'address' },
      { name: 'to', internalType: 'address', type: 'address' },
      { name: 'amount', internalType: 'uint256', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ name: '', internalType: 'bool', type: 'bool' }],
  },
] as const

/**
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export const dawantCoinAddress = {
  80001: '0xc91aeFf8d82878645D704d7278EC17642e88E9B4',
} as const

/**
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export const dawantCoinConfig = {
  address: dawantCoinAddress,
  abi: dawantCoinABI,
} as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC20
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc20ABI = [
  {
    type: 'event',
    inputs: [
      { name: 'owner', type: 'address', indexed: true },
      { name: 'spender', type: 'address', indexed: true },
      { name: 'value', type: 'uint256', indexed: false },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    inputs: [
      { name: 'from', type: 'address', indexed: true },
      { name: 'to', type: 'address', indexed: true },
      { name: 'value', type: 'uint256', indexed: false },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', type: 'address' },
      { name: 'spender', type: 'address' },
    ],
    name: 'allowance',
    outputs: [{ type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [{ type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'decimals',
    outputs: [{ type: 'uint8' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ type: 'uint256' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transfer',
    outputs: [{ type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'sender', type: 'address' },
      { name: 'recipient', type: 'address' },
      { name: 'amount', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [{ type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', type: 'address' },
      { name: 'addedValue', type: 'uint256' },
    ],
    name: 'increaseAllowance',
    outputs: [{ type: 'bool' }],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'spender', type: 'address' },
      { name: 'subtractedValue', type: 'uint256' },
    ],
    name: 'decreaseAllowance',
    outputs: [{ type: 'bool' }],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ERC721
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

export const erc721ABI = [
  {
    type: 'event',
    inputs: [
      { name: 'owner', type: 'address', indexed: true },
      { name: 'spender', type: 'address', indexed: true },
      { name: 'tokenId', type: 'uint256', indexed: true },
    ],
    name: 'Approval',
  },
  {
    type: 'event',
    inputs: [
      { name: 'owner', type: 'address', indexed: true },
      { name: 'operator', type: 'address', indexed: true },
      { name: 'approved', type: 'bool', indexed: false },
    ],
    name: 'ApprovalForAll',
  },
  {
    type: 'event',
    inputs: [
      { name: 'from', type: 'address', indexed: true },
      { name: 'to', type: 'address', indexed: true },
      { name: 'tokenId', type: 'uint256', indexed: true },
    ],
    name: 'Transfer',
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'spender', type: 'address' },
      { name: 'tokenId', type: 'uint256' },
    ],
    name: 'approve',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'account', type: 'address' }],
    name: 'balanceOf',
    outputs: [{ type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', type: 'uint256' }],
    name: 'getApproved',
    outputs: [{ type: 'address' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', type: 'address' },
      { name: 'operator', type: 'address' },
    ],
    name: 'isApprovedForAll',
    outputs: [{ type: 'bool' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'name',
    outputs: [{ type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', type: 'uint256' }],
    name: 'ownerOf',
    outputs: [{ name: 'owner', type: 'address' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'from', type: 'address' },
      { name: 'to', type: 'address' },
      { name: 'tokenId', type: 'uint256' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'from', type: 'address' },
      { name: 'to', type: 'address' },
      { name: 'id', type: 'uint256' },
      { name: 'data', type: 'bytes' },
    ],
    name: 'safeTransferFrom',
    outputs: [],
  },
  {
    stateMutability: 'nonpayable',
    type: 'function',
    inputs: [
      { name: 'operator', type: 'address' },
      { name: 'approved', type: 'bool' },
    ],
    name: 'setApprovalForAll',
    outputs: [],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'symbol',
    outputs: [{ type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'index', type: 'uint256' }],
    name: 'tokenByIndex',
    outputs: [{ type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [
      { name: 'owner', type: 'address' },
      { name: 'index', type: 'uint256' },
    ],
    name: 'tokenByIndex',
    outputs: [{ name: 'tokenId', type: 'uint256' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [{ name: 'tokenId', type: 'uint256' }],
    name: 'tokenURI',
    outputs: [{ type: 'string' }],
  },
  {
    stateMutability: 'view',
    type: 'function',
    inputs: [],
    name: 'totalSupply',
    outputs: [{ type: 'uint256' }],
  },
  {
    stateMutability: 'payable',
    type: 'function',
    inputs: [
      { name: 'sender', type: 'address' },
      { name: 'recipient', type: 'address' },
      { name: 'tokenId', type: 'uint256' },
    ],
    name: 'transferFrom',
    outputs: [],
  },
] as const

//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// React
//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link vaultABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export function useVault(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof vaultAddress
  } = {} as any,
) {
  return useContract({ abi: vaultABI, address: vaultAddress[80001], ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link vaultABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export function useVaultRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof vaultABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof vaultABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof vaultAddress } = {} as any,
) {
  return useContractRead({
    abi: vaultABI,
    address: vaultAddress[80001],
    ...config,
  } as UseContractReadConfig<typeof vaultABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link vaultABI}__ and `functionName` set to `"balances"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export function useVaultBalances<
  TSelectData = ReadContractResult<typeof vaultABI, 'balances'>,
>(
  config: Omit<
    UseContractReadConfig<typeof vaultABI, 'balances', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof vaultAddress } = {} as any,
) {
  return useContractRead({
    abi: vaultABI,
    address: vaultAddress[80001],
    functionName: 'balances',
    ...config,
  } as UseContractReadConfig<typeof vaultABI, 'balances', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link vaultABI}__ and `functionName` set to `"tokenAddress"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export function useVaultTokenAddress<
  TSelectData = ReadContractResult<typeof vaultABI, 'tokenAddress'>,
>(
  config: Omit<
    UseContractReadConfig<typeof vaultABI, 'tokenAddress', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof vaultAddress } = {} as any,
) {
  return useContractRead({
    abi: vaultABI,
    address: vaultAddress[80001],
    functionName: 'tokenAddress',
    ...config,
  } as UseContractReadConfig<typeof vaultABI, 'tokenAddress', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link vaultABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export function useVaultWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof vaultAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof vaultABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof vaultABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<TMode, typeof vaultABI, TFunctionName>({
    abi: vaultABI,
    address: vaultAddress[80001],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link vaultABI}__ and `functionName` set to `"deposit"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export function useVaultDeposit<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof vaultAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof vaultABI, 'deposit'>['abi'],
        'deposit'
      > & { address?: Address; chainId?: TChainId; functionName?: 'deposit' }
    : UseContractWriteConfig<TMode, typeof vaultABI, 'deposit'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'deposit'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof vaultABI, 'deposit'>({
    abi: vaultABI,
    address: vaultAddress[80001],
    functionName: 'deposit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link vaultABI}__ and `functionName` set to `"permitDeposit"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export function useVaultPermitDeposit<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof vaultAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof vaultABI, 'permitDeposit'>['abi'],
        'permitDeposit'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'permitDeposit'
      }
    : UseContractWriteConfig<TMode, typeof vaultABI, 'permitDeposit'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'permitDeposit'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof vaultABI, 'permitDeposit'>({
    abi: vaultABI,
    address: vaultAddress[80001],
    functionName: 'permitDeposit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link vaultABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export function useVaultWithdraw<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof vaultAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof vaultABI, 'withdraw'>['abi'],
        'withdraw'
      > & { address?: Address; chainId?: TChainId; functionName?: 'withdraw' }
    : UseContractWriteConfig<TMode, typeof vaultABI, 'withdraw'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'withdraw'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof vaultABI, 'withdraw'>({
    abi: vaultABI,
    address: vaultAddress[80001],
    functionName: 'withdraw',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link vaultABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export function usePrepareVaultWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof vaultABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof vaultAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: vaultABI,
    address: vaultAddress[80001],
    ...config,
  } as UsePrepareContractWriteConfig<typeof vaultABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link vaultABI}__ and `functionName` set to `"deposit"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export function usePrepareVaultDeposit(
  config: Omit<
    UsePrepareContractWriteConfig<typeof vaultABI, 'deposit'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof vaultAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: vaultABI,
    address: vaultAddress[80001],
    functionName: 'deposit',
    ...config,
  } as UsePrepareContractWriteConfig<typeof vaultABI, 'deposit'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link vaultABI}__ and `functionName` set to `"permitDeposit"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export function usePrepareVaultPermitDeposit(
  config: Omit<
    UsePrepareContractWriteConfig<typeof vaultABI, 'permitDeposit'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof vaultAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: vaultABI,
    address: vaultAddress[80001],
    functionName: 'permitDeposit',
    ...config,
  } as UsePrepareContractWriteConfig<typeof vaultABI, 'permitDeposit'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link vaultABI}__ and `functionName` set to `"withdraw"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0x46A1240bAeF1969bFb8fCc0c3D7320Df9689cD18)
 */
export function usePrepareVaultWithdraw(
  config: Omit<
    UsePrepareContractWriteConfig<typeof vaultABI, 'withdraw'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof vaultAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: vaultABI,
    address: vaultAddress[80001],
    functionName: 'withdraw',
    ...config,
  } as UsePrepareContractWriteConfig<typeof vaultABI, 'withdraw'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link dawantCoinABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoin(
  config: Omit<UseContractConfig, 'abi' | 'address'> & {
    chainId?: keyof typeof dawantCoinAddress
  } = {} as any,
) {
  return useContract({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    ...config,
  })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dawantCoinABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinRead<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof dawantCoinABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof dawantCoinABI, TFunctionName, TSelectData>,
    'abi' | 'address'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return useContractRead({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    ...config,
  } as UseContractReadConfig<typeof dawantCoinABI, TFunctionName, TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"DOMAIN_SEPARATOR"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinDomainSeparator<
  TSelectData = ReadContractResult<typeof dawantCoinABI, 'DOMAIN_SEPARATOR'>,
>(
  config: Omit<
    UseContractReadConfig<
      typeof dawantCoinABI,
      'DOMAIN_SEPARATOR',
      TSelectData
    >,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return useContractRead({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'DOMAIN_SEPARATOR',
    ...config,
  } as UseContractReadConfig<
    typeof dawantCoinABI,
    'DOMAIN_SEPARATOR',
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"allowance"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinAllowance<
  TSelectData = ReadContractResult<typeof dawantCoinABI, 'allowance'>,
>(
  config: Omit<
    UseContractReadConfig<typeof dawantCoinABI, 'allowance', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return useContractRead({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<typeof dawantCoinABI, 'allowance', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"balanceOf"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinBalanceOf<
  TSelectData = ReadContractResult<typeof dawantCoinABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof dawantCoinABI, 'balanceOf', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return useContractRead({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof dawantCoinABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"decimals"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinDecimals<
  TSelectData = ReadContractResult<typeof dawantCoinABI, 'decimals'>,
>(
  config: Omit<
    UseContractReadConfig<typeof dawantCoinABI, 'decimals', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return useContractRead({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<typeof dawantCoinABI, 'decimals', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"name"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinName<
  TSelectData = ReadContractResult<typeof dawantCoinABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof dawantCoinABI, 'name', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return useContractRead({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof dawantCoinABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"nonces"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinNonces<
  TSelectData = ReadContractResult<typeof dawantCoinABI, 'nonces'>,
>(
  config: Omit<
    UseContractReadConfig<typeof dawantCoinABI, 'nonces', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return useContractRead({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'nonces',
    ...config,
  } as UseContractReadConfig<typeof dawantCoinABI, 'nonces', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"symbol"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinSymbol<
  TSelectData = ReadContractResult<typeof dawantCoinABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof dawantCoinABI, 'symbol', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return useContractRead({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof dawantCoinABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"totalSupply"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinTotalSupply<
  TSelectData = ReadContractResult<typeof dawantCoinABI, 'totalSupply'>,
>(
  config: Omit<
    UseContractReadConfig<typeof dawantCoinABI, 'totalSupply', TSelectData>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return useContractRead({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof dawantCoinABI, 'totalSupply', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link dawantCoinABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinWrite<
  TMode extends WriteContractMode,
  TFunctionName extends string,
  TChainId extends number = keyof typeof dawantCoinAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof dawantCoinABI, string>['abi'],
        TFunctionName
      > & { address?: Address; chainId?: TChainId }
    : UseContractWriteConfig<TMode, typeof dawantCoinABI, TFunctionName> & {
        abi?: never
        address?: never
        chainId?: TChainId
      } = {} as any,
) {
  return useContractWrite<TMode, typeof dawantCoinABI, TFunctionName>({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinApprove<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof dawantCoinAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof dawantCoinABI, 'approve'>['abi'],
        'approve'
      > & { address?: Address; chainId?: TChainId; functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof dawantCoinABI, 'approve'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof dawantCoinABI, 'approve'>({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"decreaseAllowance"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinDecreaseAllowance<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof dawantCoinAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof dawantCoinABI,
          'decreaseAllowance'
        >['abi'],
        'decreaseAllowance'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'decreaseAllowance'
      }
    : UseContractWriteConfig<
        TMode,
        typeof dawantCoinABI,
        'decreaseAllowance'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'decreaseAllowance'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof dawantCoinABI, 'decreaseAllowance'>({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'decreaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"increaseAllowance"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinIncreaseAllowance<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof dawantCoinAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof dawantCoinABI,
          'increaseAllowance'
        >['abi'],
        'increaseAllowance'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'increaseAllowance'
      }
    : UseContractWriteConfig<
        TMode,
        typeof dawantCoinABI,
        'increaseAllowance'
      > & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'increaseAllowance'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof dawantCoinABI, 'increaseAllowance'>({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'increaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"permit"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinPermit<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof dawantCoinAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof dawantCoinABI, 'permit'>['abi'],
        'permit'
      > & { address?: Address; chainId?: TChainId; functionName?: 'permit' }
    : UseContractWriteConfig<TMode, typeof dawantCoinABI, 'permit'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'permit'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof dawantCoinABI, 'permit'>({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'permit',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"transfer"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinTransfer<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof dawantCoinAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof dawantCoinABI, 'transfer'>['abi'],
        'transfer'
      > & { address?: Address; chainId?: TChainId; functionName?: 'transfer' }
    : UseContractWriteConfig<TMode, typeof dawantCoinABI, 'transfer'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof dawantCoinABI, 'transfer'>({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinTransferFrom<
  TMode extends WriteContractMode,
  TChainId extends number = keyof typeof dawantCoinAddress,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof dawantCoinABI, 'transferFrom'>['abi'],
        'transferFrom'
      > & {
        address?: Address
        chainId?: TChainId
        functionName?: 'transferFrom'
      }
    : UseContractWriteConfig<TMode, typeof dawantCoinABI, 'transferFrom'> & {
        abi?: never
        address?: never
        chainId?: TChainId
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof dawantCoinABI, 'transferFrom'>({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link dawantCoinABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function usePrepareDawantCoinWrite<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof dawantCoinABI, TFunctionName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    ...config,
  } as UsePrepareContractWriteConfig<typeof dawantCoinABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"approve"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function usePrepareDawantCoinApprove(
  config: Omit<
    UsePrepareContractWriteConfig<typeof dawantCoinABI, 'approve'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof dawantCoinABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"decreaseAllowance"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function usePrepareDawantCoinDecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof dawantCoinABI, 'decreaseAllowance'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<typeof dawantCoinABI, 'decreaseAllowance'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"increaseAllowance"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function usePrepareDawantCoinIncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof dawantCoinABI, 'increaseAllowance'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<typeof dawantCoinABI, 'increaseAllowance'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"permit"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function usePrepareDawantCoinPermit(
  config: Omit<
    UsePrepareContractWriteConfig<typeof dawantCoinABI, 'permit'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'permit',
    ...config,
  } as UsePrepareContractWriteConfig<typeof dawantCoinABI, 'permit'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"transfer"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function usePrepareDawantCoinTransfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof dawantCoinABI, 'transfer'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof dawantCoinABI, 'transfer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link dawantCoinABI}__ and `functionName` set to `"transferFrom"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function usePrepareDawantCoinTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof dawantCoinABI, 'transferFrom'>,
    'abi' | 'address' | 'functionName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return usePrepareContractWrite({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof dawantCoinABI, 'transferFrom'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link dawantCoinABI}__.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinEvent<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof dawantCoinABI, TEventName>,
    'abi' | 'address'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return useContractEvent({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    ...config,
  } as UseContractEventConfig<typeof dawantCoinABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link dawantCoinABI}__ and `eventName` set to `"Approval"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof dawantCoinABI, 'Approval'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return useContractEvent({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof dawantCoinABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link dawantCoinABI}__ and `eventName` set to `"Transfer"`.
 *
 * [__View Contract on Polygon Mumbai Polygon Scan__](https://mumbai.polygonscan.com/address/0xc91aeFf8d82878645D704d7278EC17642e88E9B4)
 */
export function useDawantCoinTransferEvent(
  config: Omit<
    UseContractEventConfig<typeof dawantCoinABI, 'Transfer'>,
    'abi' | 'address' | 'eventName'
  > & { chainId?: keyof typeof dawantCoinAddress } = {} as any,
) {
  return useContractEvent({
    abi: dawantCoinABI,
    address: dawantCoinAddress[80001],
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof dawantCoinABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20(config: Omit<UseContractConfig, 'abi'> = {} as any) {
  return useContract({ abi: erc20ABI, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Read<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof erc20ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, TFunctionName, TSelectData>,
    'abi'
  > = {} as any,
) {
  return useContractRead({ abi: erc20ABI, ...config } as UseContractReadConfig<
    typeof erc20ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"allowance"`.
 */
export function useErc20Allowance<
  TSelectData = ReadContractResult<typeof erc20ABI, 'allowance'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, 'allowance', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'allowance',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, 'allowance', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useErc20BalanceOf<
  TSelectData = ReadContractResult<typeof erc20ABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, 'balanceOf', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"decimals"`.
 */
export function useErc20Decimals<
  TSelectData = ReadContractResult<typeof erc20ABI, 'decimals'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, 'decimals', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'decimals',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, 'decimals', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"name"`.
 */
export function useErc20Name<
  TSelectData = ReadContractResult<typeof erc20ABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, 'name', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"symbol"`.
 */
export function useErc20Symbol<
  TSelectData = ReadContractResult<typeof erc20ABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, 'symbol', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useErc20TotalSupply<
  TSelectData = ReadContractResult<typeof erc20ABI, 'totalSupply'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc20ABI, 'totalSupply', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc20ABI,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof erc20ABI, 'totalSupply', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Write<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc20ABI, string>['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<TMode, typeof erc20ABI, TFunctionName> & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc20ABI, TFunctionName>({
    abi: erc20ABI,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function useErc20Approve<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc20ABI, 'approve'>['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'approve'> & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc20ABI, 'approve'>({
    abi: erc20ABI,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function useErc20Transfer<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc20ABI, 'transfer'>['abi'],
        'transfer'
      > & { functionName?: 'transfer' }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'transfer'> & {
        abi?: never
        functionName?: 'transfer'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc20ABI, 'transfer'>({
    abi: erc20ABI,
    functionName: 'transfer',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useErc20TransferFrom<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc20ABI, 'transferFrom'>['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'transferFrom'> & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc20ABI, 'transferFrom'>({
    abi: erc20ABI,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function useErc20IncreaseAllowance<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc20ABI, 'increaseAllowance'>['abi'],
        'increaseAllowance'
      > & { functionName?: 'increaseAllowance' }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'increaseAllowance'> & {
        abi?: never
        functionName?: 'increaseAllowance'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc20ABI, 'increaseAllowance'>({
    abi: erc20ABI,
    functionName: 'increaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function useErc20DecreaseAllowance<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc20ABI, 'decreaseAllowance'>['abi'],
        'decreaseAllowance'
      > & { functionName?: 'decreaseAllowance' }
    : UseContractWriteConfig<TMode, typeof erc20ABI, 'decreaseAllowance'> & {
        abi?: never
        functionName?: 'decreaseAllowance'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc20ABI, 'decreaseAllowance'>({
    abi: erc20ABI,
    functionName: 'decreaseAllowance',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__.
 */
export function usePrepareErc20Write<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>,
    'abi'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareErc20Approve(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, 'approve'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transfer"`.
 */
export function usePrepareErc20Transfer(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, 'transfer'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: 'transfer',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, 'transfer'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareErc20TransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, 'transferFrom'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, 'transferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"increaseAllowance"`.
 */
export function usePrepareErc20IncreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, 'increaseAllowance'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: 'increaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, 'increaseAllowance'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc20ABI}__ and `functionName` set to `"decreaseAllowance"`.
 */
export function usePrepareErc20DecreaseAllowance(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc20ABI, 'decreaseAllowance'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc20ABI,
    functionName: 'decreaseAllowance',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc20ABI, 'decreaseAllowance'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__.
 */
export function useErc20Event<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof erc20ABI, TEventName>,
    'abi'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc20ABI,
    ...config,
  } as UseContractEventConfig<typeof erc20ABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Approval"`.
 */
export function useErc20ApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof erc20ABI, 'Approval'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc20ABI,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof erc20ABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc20ABI}__ and `eventName` set to `"Transfer"`.
 */
export function useErc20TransferEvent(
  config: Omit<
    UseContractEventConfig<typeof erc20ABI, 'Transfer'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc20ABI,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof erc20ABI, 'Transfer'>)
}

/**
 * Wraps __{@link useContract}__ with `abi` set to __{@link erc721ABI}__.
 */
export function useErc721(config: Omit<UseContractConfig, 'abi'> = {} as any) {
  return useContract({ abi: erc721ABI, ...config })
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__.
 */
export function useErc721Read<
  TFunctionName extends string,
  TSelectData = ReadContractResult<typeof erc721ABI, TFunctionName>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, TFunctionName, TSelectData>,
    'abi'
  > = {} as any,
) {
  return useContractRead({ abi: erc721ABI, ...config } as UseContractReadConfig<
    typeof erc721ABI,
    TFunctionName,
    TSelectData
  >)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"balanceOf"`.
 */
export function useErc721BalanceOf<
  TSelectData = ReadContractResult<typeof erc721ABI, 'balanceOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, 'balanceOf', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'balanceOf',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, 'balanceOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"getApproved"`.
 */
export function useErc721GetApproved<
  TSelectData = ReadContractResult<typeof erc721ABI, 'getApproved'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, 'getApproved', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'getApproved',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, 'getApproved', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"isApprovedForAll"`.
 */
export function useErc721IsApprovedForAll<
  TSelectData = ReadContractResult<typeof erc721ABI, 'isApprovedForAll'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, 'isApprovedForAll', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'isApprovedForAll',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, 'isApprovedForAll', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"name"`.
 */
export function useErc721Name<
  TSelectData = ReadContractResult<typeof erc721ABI, 'name'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, 'name', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'name',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, 'name', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"ownerOf"`.
 */
export function useErc721OwnerOf<
  TSelectData = ReadContractResult<typeof erc721ABI, 'ownerOf'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, 'ownerOf', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'ownerOf',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, 'ownerOf', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"symbol"`.
 */
export function useErc721Symbol<
  TSelectData = ReadContractResult<typeof erc721ABI, 'symbol'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, 'symbol', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'symbol',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, 'symbol', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"tokenByIndex"`.
 */
export function useErc721TokenByIndex<
  TSelectData = ReadContractResult<typeof erc721ABI, 'tokenByIndex'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, 'tokenByIndex', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'tokenByIndex',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, 'tokenByIndex', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"tokenURI"`.
 */
export function useErc721TokenUri<
  TSelectData = ReadContractResult<typeof erc721ABI, 'tokenURI'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, 'tokenURI', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'tokenURI',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, 'tokenURI', TSelectData>)
}

/**
 * Wraps __{@link useContractRead}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"totalSupply"`.
 */
export function useErc721TotalSupply<
  TSelectData = ReadContractResult<typeof erc721ABI, 'totalSupply'>,
>(
  config: Omit<
    UseContractReadConfig<typeof erc721ABI, 'totalSupply', TSelectData>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return useContractRead({
    abi: erc721ABI,
    functionName: 'totalSupply',
    ...config,
  } as UseContractReadConfig<typeof erc721ABI, 'totalSupply', TSelectData>)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc721ABI}__.
 */
export function useErc721Write<
  TMode extends WriteContractMode,
  TFunctionName extends string,
>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc721ABI, string>['abi'],
        TFunctionName
      >
    : UseContractWriteConfig<TMode, typeof erc721ABI, TFunctionName> & {
        abi?: never
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc721ABI, TFunctionName>({
    abi: erc721ABI,
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"approve"`.
 */
export function useErc721Approve<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc721ABI, 'approve'>['abi'],
        'approve'
      > & { functionName?: 'approve' }
    : UseContractWriteConfig<TMode, typeof erc721ABI, 'approve'> & {
        abi?: never
        functionName?: 'approve'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc721ABI, 'approve'>({
    abi: erc721ABI,
    functionName: 'approve',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function useErc721SafeTransferFrom<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc721ABI, 'safeTransferFrom'>['abi'],
        'safeTransferFrom'
      > & { functionName?: 'safeTransferFrom' }
    : UseContractWriteConfig<TMode, typeof erc721ABI, 'safeTransferFrom'> & {
        abi?: never
        functionName?: 'safeTransferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc721ABI, 'safeTransferFrom'>({
    abi: erc721ABI,
    functionName: 'safeTransferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function useErc721SetApprovalForAll<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<
          typeof erc721ABI,
          'setApprovalForAll'
        >['abi'],
        'setApprovalForAll'
      > & { functionName?: 'setApprovalForAll' }
    : UseContractWriteConfig<TMode, typeof erc721ABI, 'setApprovalForAll'> & {
        abi?: never
        functionName?: 'setApprovalForAll'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc721ABI, 'setApprovalForAll'>({
    abi: erc721ABI,
    functionName: 'setApprovalForAll',
    ...config,
  } as any)
}

/**
 * Wraps __{@link useContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function useErc721TransferFrom<TMode extends WriteContractMode>(
  config: TMode extends 'prepared'
    ? UseContractWriteConfig<
        TMode,
        PrepareWriteContractResult<typeof erc721ABI, 'transferFrom'>['abi'],
        'transferFrom'
      > & { functionName?: 'transferFrom' }
    : UseContractWriteConfig<TMode, typeof erc721ABI, 'transferFrom'> & {
        abi?: never
        functionName?: 'transferFrom'
      } = {} as any,
) {
  return useContractWrite<TMode, typeof erc721ABI, 'transferFrom'>({
    abi: erc721ABI,
    functionName: 'transferFrom',
    ...config,
  } as any)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc721ABI}__.
 */
export function usePrepareErc721Write<TFunctionName extends string>(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc721ABI, TFunctionName>,
    'abi'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc721ABI,
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc721ABI, TFunctionName>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"approve"`.
 */
export function usePrepareErc721Approve(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc721ABI, 'approve'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc721ABI,
    functionName: 'approve',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc721ABI, 'approve'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"safeTransferFrom"`.
 */
export function usePrepareErc721SafeTransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc721ABI, 'safeTransferFrom'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc721ABI,
    functionName: 'safeTransferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc721ABI, 'safeTransferFrom'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"setApprovalForAll"`.
 */
export function usePrepareErc721SetApprovalForAll(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc721ABI, 'setApprovalForAll'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc721ABI,
    functionName: 'setApprovalForAll',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc721ABI, 'setApprovalForAll'>)
}

/**
 * Wraps __{@link usePrepareContractWrite}__ with `abi` set to __{@link erc721ABI}__ and `functionName` set to `"transferFrom"`.
 */
export function usePrepareErc721TransferFrom(
  config: Omit<
    UsePrepareContractWriteConfig<typeof erc721ABI, 'transferFrom'>,
    'abi' | 'functionName'
  > = {} as any,
) {
  return usePrepareContractWrite({
    abi: erc721ABI,
    functionName: 'transferFrom',
    ...config,
  } as UsePrepareContractWriteConfig<typeof erc721ABI, 'transferFrom'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc721ABI}__.
 */
export function useErc721Event<TEventName extends string>(
  config: Omit<
    UseContractEventConfig<typeof erc721ABI, TEventName>,
    'abi'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc721ABI,
    ...config,
  } as UseContractEventConfig<typeof erc721ABI, TEventName>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc721ABI}__ and `eventName` set to `"Approval"`.
 */
export function useErc721ApprovalEvent(
  config: Omit<
    UseContractEventConfig<typeof erc721ABI, 'Approval'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc721ABI,
    eventName: 'Approval',
    ...config,
  } as UseContractEventConfig<typeof erc721ABI, 'Approval'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc721ABI}__ and `eventName` set to `"ApprovalForAll"`.
 */
export function useErc721ApprovalForAllEvent(
  config: Omit<
    UseContractEventConfig<typeof erc721ABI, 'ApprovalForAll'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc721ABI,
    eventName: 'ApprovalForAll',
    ...config,
  } as UseContractEventConfig<typeof erc721ABI, 'ApprovalForAll'>)
}

/**
 * Wraps __{@link useContractEvent}__ with `abi` set to __{@link erc721ABI}__ and `eventName` set to `"Transfer"`.
 */
export function useErc721TransferEvent(
  config: Omit<
    UseContractEventConfig<typeof erc721ABI, 'Transfer'>,
    'abi' | 'eventName'
  > = {} as any,
) {
  return useContractEvent({
    abi: erc721ABI,
    eventName: 'Transfer',
    ...config,
  } as UseContractEventConfig<typeof erc721ABI, 'Transfer'>)
}
